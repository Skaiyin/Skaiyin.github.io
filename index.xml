<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/"><channel><title>无所事事的博客</title><atom:link href="%7balternate%20%7brss%20application/rss+xml%20%20index%20alternate%20%20false%20false%20true%20false%20false%20false%20false%200%7d%20/index.xml%20https://Skaiyin.github.io/index.xml%7d" rel="self" type="application/rss+xml"/><link>https://Skaiyin.github.io/</link><managingEditor/><description>无所事事的博客</description><lastBuildDate>Sun, 08 Dec 2024 20:39:08 +0800</lastBuildDate><language>zh-cn</language><generator>Hugo -- gohugo.io</generator><item><title>自由度</title><link>https://Skaiyin.github.io/2024/12/08/%E8%87%AA%E7%94%B1%E5%BA%A6.html/</link><pubDate>Sun, 08 Dec 2024 20:39:08 +0800</pubDate><guid>https://Skaiyin.github.io/2024/12/08/%E8%87%AA%E7%94%B1%E5%BA%A6.html/</guid><description>
&lt;h2 class="group " id="自由度"
>自由度&lt;a href="#%e8%87%aa%e7%94%b1%e5%ba%a6"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h2>
&lt;p>自由度（degree of freedom, df）是指数据集中可以自由变动的变量个数，也可以理解为可以加入限制条件的变量个数。&lt;/p>
&lt;h3 class="group " id="基本概念"
>基本概念&lt;a href="#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h3>
&lt;p>比如一个数据集有 $n$ 个变量，那么最多可以加入 $n$ 个限制条件。这就像在解方程时，$n$ 个未知数需要 $n$ 个方程才能求解。&lt;/p>
&lt;h3 class="group " id="常见示例"
>常见示例&lt;a href="#%e5%b8%b8%e8%a7%81%e7%a4%ba%e4%be%8b"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>均值相关&lt;/strong>：
对于 $\sum_{i=1}^n (Y_i - \bar{Y})$ 来说，我们有：&lt;/p>
&lt;ul>
&lt;li>$n$ 个观测值 $Y_i$&lt;/li>
&lt;li>限制条件：$\bar{Y} = \frac{1}{n} \sum_{i=1}^n Y_i$&lt;/li>
&lt;li>这个限制条件减少了一个自由度&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>回归分析&lt;/strong>：
对于 $\sum_{i=1}^n (Y_i - \hat{Y})^2$ 来说：&lt;/p>
&lt;ul>
&lt;li>有 $n$ 个观测值&lt;/li>
&lt;li>若 $\hat{Y}$ 是一个包含 $p$ 个参数的模型&lt;/li>
&lt;li>$p$ 个参数相当于 $p$ 个限制条件&lt;/li>
&lt;li>最终自由度为 $n-p$&lt;/li>
&lt;li>这意味着上述表达式可以转化为最多具有 $n-p$ 个参数的函数&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>快速傅里叶变换（FFT）</title><link>https://Skaiyin.github.io/2023/10/11/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2fft.html/</link><pubDate>Wed, 11 Oct 2023 21:08:24 +1300</pubDate><guid>https://Skaiyin.github.io/2023/10/11/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2fft.html/</guid><description>
&lt;h2 class="group " id="什么是快速傅里叶变换fast-fourier-transform-fft"
>什么是快速傅里叶变换（Fast Fourier Transform, FFT）&lt;a href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%bf%ab%e9%80%9f%e5%82%85%e9%87%8c%e5%8f%b6%e5%8f%98%e6%8d%a2fast-fourier-transform-fft"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h2>
&lt;p>度数为 $ n $ 的多项式 $ P(x) $ 可以表示为：&lt;/p>
&lt;p>$$
P(x) = a_0 + a_1x + a_2x^2 + a_3x^3 + \ldots + a_nx^n
$$&lt;/p>
&lt;p>可以采用系数表示法，即：&lt;/p>
&lt;p>$$
a_0, a_1, a_2, \ldots, a_n
$$&lt;/p>
&lt;p>也可以采用点值表示法，即：&lt;/p>
&lt;p>$$
(x_0,y_0), (x_1,y_1), (x_2,y_2), \ldots, (x_n,y_n)
$$&lt;/p>
&lt;p>FFT 是将系数表示转为点值表示的算法。&lt;/p>
&lt;h2 class="group " id="分治算法"
>分治算法&lt;a href="#%e5%88%86%e6%b2%bb%e7%ae%97%e6%b3%95"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h2>
&lt;ol>
&lt;li>将多项式 $ P(x) $ 分为奇数项和偶数项，$ x \in X $：&lt;/li>
&lt;/ol>
&lt;p>$$
P_{\text{odd}} = a_1x + a_3x^2 + \ldots + a_{n-1}x^{n-1} \quad \text{(度数为 $ n/2 $)}
$$
$$
P_{\text{even}} = a_0 + a_2x^2 + \ldots + a_{n-2}x^{n-2} \quad \text{(度数为 $ n/2 $)}
$$
$$
P(x) = P_{\text{odd}}(x^2) + xP_{\text{even}}(x^2) \quad \text{(总多项式)}
$$&lt;/p>
&lt;ol start="2">
&lt;li>递归地计算 $ P_{\text{odd}}(x^2) $ 和 $ P_{\text{even}}(x^2) $&lt;/li>
&lt;li>组合&lt;/li>
&lt;/ol>
&lt;h3 class="group " id="时间复杂度分析"
>时间复杂度分析&lt;a href="#%e6%97%b6%e9%97%b4%e5%a4%8d%e6%9d%82%e5%ba%a6%e5%88%86%e6%9e%90"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h3>
&lt;h4 class="group " id="观察-1-拆分多项式"
>观察 1: 拆分多项式&lt;a href="#%e8%a7%82%e5%af%9f-1-%e6%8b%86%e5%88%86%e5%a4%9a%e9%a1%b9%e5%bc%8f"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h4>
&lt;p>在拆分多项式为奇数次项和偶数次项时，我们需要遍历所有的 $ a_i $ 系数。这个操作的时间复杂度是 $ O(n) $。&lt;/p>
&lt;h4 class="group " id="观察-2-点的数量"
>观察 2: 点的数量&lt;a href="#%e8%a7%82%e5%af%9f-2-%e7%82%b9%e7%9a%84%e6%95%b0%e9%87%8f"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h4>
&lt;p>在算法开始时，输入点集 $ X $ 的大小与多项式 $ P(x) $ 的度数相同，即 $ |X| = n $。值得注意的是，在递归步骤中，即便 $ P(x) $ 的度数减半���输入点集的大小依然保持不变。这是因为在计算 $ P_{\text{odd}}(x^2) $ 和 $ P_{\text{even}}(x^2) $ 时，我们依然需要在同样的点集 $ X $ 上进行评估。&lt;/p>
&lt;h4 class="group " id="观察-3-递归复杂度"
>观察 3: 递归复杂度&lt;a href="#%e8%a7%82%e5%af%9f-3-%e9%80%92%e5%bd%92%e5%a4%8d%e6%9d%82%e5%ba%a6"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h4>
&lt;p>递归地计算 $ P_{\text{odd}}(x^2) $ 和 $ P_{\text{even}}(x^2) $ 会生成两个子问题，每个子问题的大小是原问题大小的一半。因此，递归的时间复杂度为 $ 2T(n/2, |X|) $。&lt;/p>
&lt;h4 class="group " id="观察-4-组合结果的复杂度"
>观察 4: 组合结果的复杂度&lt;a href="#%e8%a7%82%e5%af%9f-4-%e7%bb%84%e5%90%88%e7%bb%93%e6%9e%9c%e7%9a%84%e5%a4%8d%e6%9d%82%e5%ba%a6"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h4>
&lt;p>根据 $ P(x) = P_{\text{odd}}(x^2) + xP_{\text{even}}(x^2) $，我们需要对每个 $ x $ 值进行一次乘法和一次加法以得到 $ P(x) $ 的值。这一步的时间复杂度是 $ O(|X|) $。
同时可以看到最开始 $ |X| = n $。&lt;/p>
&lt;p>综合以上观察，我们可以得出总体时间复杂度公式为：&lt;/p>
&lt;p>$$
T(n, |X|) = 2T\left(\frac{n}{2}, |X|\right) + O(n + |X|)
$$&lt;/p>
&lt;p>由于二叉树的高度为 $ \log_2 n $，最后一层有 $ n $ 个节点，每个节点需要 $ O(n) $ 的时间来完成计算（主要是由于观察 4 的组合结果步骤），因此总体时间复杂度为 $ O(n^2) $。&lt;/p>
&lt;h3 class="group " id="优化"
>优化&lt;a href="#%e4%bc%98%e5%8c%96"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h3>
&lt;p>现在主要的问题是：
$$
|X| = |X^2| = |X^4|
$$
我们希望：
$$
|X| = 2 \times |X^2| = 2^2 \times |X^4| = \ldots = 2^{\log n} \times 1
$$&lt;/p>
&lt;h4 class="group " id="正负数"
>正负数&lt;a href="#%e6%ad%a3%e8%b4%9f%e6%95%b0"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h4>
&lt;p>当我们输入：
$$
S = \{+1，-1\}
$$
时，我们可以得��：
$$
S^2 = \{+1，-1\}^2 = \{+1\}
$$
看似满足了第一步，但是无法进行下一次递归，也就是说之后的时间复杂度还是 $ O(n^2) $。&lt;/p>
&lt;h4 class="group " id="虚数"
>虚数&lt;a href="#%e8%99%9a%e6%95%b0"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h4>
&lt;p>$ x^n = 1 $ 的解为：
$$
\omega^0,\omega^1, \ldots ,\omega^{n-1}, \quad \omega = e^{2\pi i/n} \text{ 有 $ n $ 个解 }
$$
证明：
已知：欧拉公式：
$$
e^{\pi i} = -1
$$
则：
$$
(\omega^k)^n = (\omega^n)^k = (e^{2\pi i})^k = (-1)^{2k} = 1
$$
$ i $ 是虚数单位。&lt;/p>
&lt;p>也就是说，我们可以用复数来表示 $ x $。这样，
$$
|X| = 2 \times |X^2| = 2^2 \times |X^4| = \ldots = 2^{\log n} \times 1
$$&lt;/p>
&lt;p>证明：
$$
x^n = (x^2)^{n/2} = 1
$$
则：
$$
|X| = 2 \times |X^2|
$$&lt;/p>
&lt;h2 class="group " id="最后的时间复杂度"
>最后的时间复杂度&lt;a href="#%e6%9c%80%e5%90%8e%e7%9a%84%e6%97%b6%e9%97%b4%e5%a4%8d%e6%9d%82%e5%ba%a6"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h2>
&lt;p>最终，我们可以得到：
$$
T(n, |X|) = 2T\left(\frac{n}{2}, |X|\right) + O(n + |X|)\quad \text{($ |X| $ 会随 $ n $ 的减小而减小)}
$$
即
$$
T(n) = 2T(\frac{n}{2}) + O(n) = O(n\log n)
$$
总体时间复杂度为 $ O(n\log n) $。&lt;/p></description></item><item><title>Test</title><link>https://Skaiyin.github.io/2023/07/14/test.html/</link><pubDate>Fri, 14 Jul 2023 22:11:54 +1200</pubDate><guid>https://Skaiyin.github.io/2023/07/14/test.html/</guid><description>
&lt;h1 class="group " id="页面测试"
>页面测试&lt;a href="#%e9%a1%b5%e9%9d%a2%e6%b5%8b%e8%af%95"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h1>
&lt;p>nihao&lt;/p>
&lt;h1 class="group " id="ci测试"
>CI测试&lt;a href="#ci%e6%b5%8b%e8%af%95"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h1>
&lt;h1 class="group " id="测试收录在google中"
>测试收录在google中&lt;a href="#%e6%b5%8b%e8%af%95%e6%94%b6%e5%bd%95%e5%9c%a8google%e4%b8%ad"
>&lt;i class="eva eva-link ml-3 align-middle text-theme opacity-0 transition ease-in-out group-hover:opacity-100">&lt;/i>&lt;/a
>&lt;/h1></description></item></channel></rss>